#####################################################################################################################
# Выполнил: Иван Суханюк(Курс: Intro Python (07.04.2020))
# Последние изменения: 21.04.2020
#  -> Написать функцию, принимающую один аргумент. Функция жолджна вывести на экран тип данных этого аргумента (type).
#  -> Написать функцию, принимающую два аргумента.Если оба аргумента относятся к числовым типам - вернуть их
#   произведение, если к строкам - соединить в одну строку и вернуть, если первый строка, а второй нет - вернуть
#   словарь, в котором ключ - первый аргумент а значение - второй, в любом другом случае вернуть кортеж из аргументов
#  -> Дан словарь продавцов и цен на какой то товар у разных продавцов на hotline: { ‘citrus’: 47.999, ‘istudio’ 42.999,
#   ‘moyo’: 49.999, ‘royal-service’: 37.245, ‘buy.ua’: 38.324, ‘g-store’: 37.166, ‘ipartner’: 38.988, ‘sota’: 37.720 }.
#   Написать функцию возвращающую список имен продавцов, чьи цены попадают в определенный диапазон. Функция должна
#   принимать словарь, начало и конец диапазона и возвращать список имен.
#  -> * Пользователь вводит строку произвольной длины. Написать функцию, которая должна вернуть словарь следующего
#   содержания: ключ - количество букв в слове, значение - список слов с таким количеством букв. Отдельным ключом
#   количество пробелов и знаки препинания
#  Например:
#  {
#  "0": количество пробелов в строке
#  "1": list слов из одной буквы
#  "2": list слов из двух букв
#  "3": list слов из трех букв
#  и т.д ...
#  "punctuation" : tuple уникальных знаков препинания
#  }
#####################################################################################################################
switch = False


def all_func():
    global switch
    return switch


def tsk_1(tmp):
    if tmp.isalnum():
        try:
            tmp = int(tmp)
        except ValueError:
            try :
                tmp = float(tmp)
            except ValueError:
    else:
        if tmp.startswith("(") and ("," in tmp) and tmp.endswith(")"):
            print("Тип значения: tuple")
        elif tmp.startswith("{") and tmp.endswith("}"):
            tmp = tmp.split(",")
            count = [i for i in tmp if ":" in i]
            if len(count) == len(tmp):
                print("Тип значения: dictionary\n")
            else:
                print("Тип значения: set\n")
        else:
            print("Тип значения: string\n")

    if all_func():
        tsk_2()


def tsk_2():
    print("-> task 2")
    if all_func():
        tsk_3()


def tsk_3():
    print("-> task 3")
    if all_func():
        tsk_4()


def tsk_4():
    print("-> task 4")
    if all_func():
        switch = False


options = {"1", "2", "3", "4", "all", "quit"}


def task_ctrl(opt):
    if opt in options:
        return opt
    else:
        print("Не понимаю о чем вы, попробуйте еще раз)")
        return None


tab = 20
menu_cycle = 1
while True:
    print("~" * 30 + "{Итерация № %d}" % menu_cycle + "~" * 30)
    print(" " * tab + "+--------------------------------+")
    print(" " * tab + "|  Первое задание       |  1     |")
    print(" " * tab + "|  Второе задание       |  2     |")
    print(" " * tab + "|  Третье задание       |  3     |")
    print(" " * tab + "|  Четвертое задание    |  4     |")
    print(" " * tab + "|  Все по очереди       |  all   |")
    print(" " * tab + "|  Завершение программы |  quit  |")
    print(" " * tab + "+--------------------------------+")
    task = task_ctrl(input(">>> Введите режим работы: "))
    menu_cycle += 1

    if task == "quit":
        break
    elif task is None:
        continue
    elif task == "all":
        switch = True
        print("-> task 1")
        tsk_1(input(">>> Введите значение: "))
        switch = False
    elif task is "1":
        print("\n-> task 1")
        tsk_1(input(">>> Введите значение: "))
    elif task is "2":
        tsk_2()
    elif task is "3":
        tsk_3()
    elif task is "4":
        tsk_4()