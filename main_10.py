#######################################################################################################################
# Выполнил: Иван Суханюк(Курс: Intro Python (07.04.2020))
# Последние изменения: 13.05.2020
#  -> task 1: Добавьте в класс Unit атрибут, отвечающий за шанс (в процентах) для юнита нанести двойной урон во
#  	время атаки. Измените метод вычисления урона так, чтобы данная величина учитывалась при выполнении атаки.
#  	Можно использовать итератор или генератор, который будет возвращать результат обработки шанса (например шанс 0.5
#  	или 50% и определяет, сработал шанс или нет)
#  -> task 2: Сделайте класс Stuff, который будет базовым для всех вещей, которые смогут использовать юниты.
#  	В классе должен быть атрибут(ы), определяющий(е) классы юнитов, которые могут им воспользоваться;
#  	атрибуты, отвечающие за модификацию параметров юнита, который пользуется этим Stuff-ом
#  	(атрибуты для health, damage, defence)
#  -> *task 3: Добавьте в класс Unit атрибут, отвечающий за шанс (в процентах) для юнита уклонится от атаки
#  	противника и метод получения результата (уклонился от атаки или нет) во время атаки. Измените метод вычисления
# 	учитывалась при выполнении атаки (при уклонении от атаки урон не наносится).
#  	Также можно использовать итератор\генератор
######################################################################################################################
from PyProjects.Modules.Item import Item
from PyProjects.Modules.Mage import Mage
from PyProjects.Modules.Knight import Knight

sword1 = Item("sword", dmg=150)
sword2 = Item("sword", attachment="Mage", dmg=100)
sword3 = Item("sword", attachment="Knight", dmg=50)

mag = Mage("Vasya")
kn = Knight("Peter")

mag.take_item(sword1)

print(mag)







